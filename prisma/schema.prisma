generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model appointments {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  v               Int      @map("__v")
  amount          Int
  appointmentDate DateTime @db.Date
  createdAt       DateTime @db.Date
  paymentStatus   String
  petId           String   @db.ObjectId
  status          String
  type            String
  rating          Int
  review          String
  updatedAt       DateTime @db.Date
  userId          String   @db.ObjectId
  vetId           String   @db.ObjectId
      user   users   @relation(fields: [userId], references: [id])
      pet    pets   @relation(fields: [petId], references: [id])
      vet    vets   @relation(fields: [vetId], references: [id])


}

model pets {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  v          Int      @map("__v")
  age        Int
  animalType String
  createdAt  DateTime @db.Date
  gender     String
  image      String
  name       String
  ownerId    String   @db.ObjectId
  species    String
  updatedAt  DateTime @db.Date
      user   users   @relation(fields: [ownerId], references: [id])
  appointments appointments[]
      
}

model users {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int     @map("__v")
  avatar    String?
  createdAt DateTime @db.Date
  email     String  @unique
  gender    String
  isAdmin   Boolean
  password  String
  updatedAt DateTime @db.Date
  username  String   @unique(map: "username_1")
  lat       String
  long      String
  pets       pets[]
  appointments appointments[]

}

model vets {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  v                 Int     @map("__v")
  avatar            String?
  createdAt         DateTime @db.Date
  degreeImage       String
  email             String   @unique
  fieldOfStudy      String
  gender            String
  isApproved        Boolean
  licenseImage      String
  password          String
  specializations   String[]
  university        String
  updatedAt         DateTime @db.Date
  username          String   @unique(map: "username_1")
  yearsOfExperience Int
  licenseNumber     String
  address           String
  clinicName        String
  lat               String
  long              String
  description       String
  appointments appointments[]
}
